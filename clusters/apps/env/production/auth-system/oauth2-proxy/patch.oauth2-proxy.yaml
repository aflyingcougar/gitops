---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: google-auth
spec:
  interval: 5m
  chart:
    spec:
      chart: oauth2-proxy
      version: 6.17.1
      sourceRef:
        kind: HelmRepository
        name: oauth2-proxy-chart
        namespace: flux-system
      interval: 5m
  values:
    ## Override the deployment namespace
    ##
    namespaceOverride: "auth-system"
    # Oauth client configuration specifics
    config:
      # Add config annotations
      annotations: {}
      # OAuth client ID
      clientID: "${OAUTH2_PROXY_CLIENT_ID}"
      # OAuth client secret
      clientSecret: "${OAUTH2_PROXY_CLIENT_SECRET}"
      # Create a new secret with the following command
      # openssl rand -base64 32 | head -c 32 | base64
      # Use an existing secret for OAuth2 credentials (see secret.yaml for required fields)
      # Example:
      # existingSecret: secret
      cookieSecret: "${OAUTH2_PROXY_COOKIE_SECRET}"
      # The name of the cookie that oauth2-proxy will create
      # If left empty, it will default to the release name
      cookieName: "john-family-sso-token"
      google: {}
        # adminEmail: xxxx
        # useApplicationDefaultCredentials: true
        # targetPrincipal: xxxx
        # serviceAccountJson: xxxx
        # Alternatively, use an existing secret (see google-secret.yaml for required fields)
        # Example:
        # existingSecret: google-secret
        # groups: []
        # Example:
        #  - group1@example.com
        #  - group2@example.com
      # Default configuration, to be overridden
      configFile: |-
        email_domains = [ "*" ]
        upstreams = [ "file:///dev/null" ]

    # -- Custom labels to add into metadata
    customLabels: {}

    service:
      type: ClusterIP
      portNumber: 80
      # Protocol set on the service
      appProtocol: http
      annotations: {}
      # foo.io/bar: "true"

    ## Create or use ServiceAccount
    serviceAccount:
      ## Specifies whether a ServiceAccount should be created
      enabled: true
      ## The name of the ServiceAccount to use.
      ## If not set and create is true, a name is generated using the fullname template
      name:
      automountServiceAccountToken: true
      annotations: {}

    ingress:
      enabled: false
      # className: nginx
      path: /
      # Only used if API capabilities (networking.k8s.io/v1) allow it
      pathType: ImplementationSpecific
      # Used to create an Ingress record.
      # hosts:
        # - chart-example.local
      # Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
      # Warning! The configuration is dependant on your current k8s API version capabilities (networking.k8s.io/v1)
      # extraPaths:
      # - path: /*
      #   pathType: ImplementationSpecific
      #   backend:
      #     service:
      #       name: ssl-redirect
      #       port:
      #         name: use-annotation
      labels: {}
      # annotations:
      #   kubernetes.io/ingress.class: nginx
      #   kubernetes.io/tls-acme: "true"
      # tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local

    resources: {}
      # limits:
      #   cpu: 100m
      #   memory: 300Mi
      # requests:
      #   cpu: 100m
      #   memory: 300Mi

    extraVolumes: []
      # - name: ca-bundle-cert
      #   secret:
      #     secretName: <secret-name>

    extraVolumeMounts: []
      # - mountPath: /etc/ssl/certs/
      #   name: ca-bundle-cert

    # Additional containers to be added to the pod.
    extraContainers: []
      #  - name: my-sidecar
      #    image: nginx:latest

    priorityClassName: ""

    # [TopologySpreadConstraints](https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/) configuration.
    # Ref: https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling
    # topologySpreadConstraints: []

    # Affinity for pod assignment
    # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    # affinity: {}

    # Tolerations for pod assignment
    # Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations: []

    # Node labels for pod assignment
    # Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: {}

    # Whether to use secrets instead of environment values for setting up OAUTH2_PROXY variables
    proxyVarsAsSecrets: true

    deploymentAnnotations: {}
    podAnnotations: {}
    podLabels: {}
    replicaCount: 1
    revisionHistoryLimit: 10

    # Configure Kubernetes security context for pod
    # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    podSecurityContext: {}

    # whether to use http or https
    httpScheme: http

    # Configure the session storage type, between cookie and redis
    sessionStorage:
      # Can be one of the supported session storage cookie|redis
      type: cookie

    # Enables apiVersion deprecation checks
    checkDeprecation: true

    metrics:
      # Enable Prometheus metrics endpoint
      enabled: true
      # Serve Prometheus metrics on this port
      port: 44180
      # when service.type is NodePort ...
      # nodePort: 44180
      # Protocol set on the service for the metrics port
      service:
        appProtocol: http
