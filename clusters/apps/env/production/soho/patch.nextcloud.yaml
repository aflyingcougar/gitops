---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  values:
    image:
      repository: nextcloud
      tag: 23.0.0-fpm
      pullPolicy: IfNotPresent
    nextcloud:
      host: cloud.${SECRET_DOMAIN}
      username: ${NEXTCLOUD_APP_ADMIN_USER}
      password: ${NEXTCLOUD_APP_ADMIN_PASSWORD}
      datadir: /var/www/html/data
      mail:
        enabled: true
        fromAddress: cloud
        domain: ${SMTP_DOMAIN}
        smtp:
          host: ${SMTP_HOST}
          secure: ssl
          port: ${SMTP_SSL_PORT}
          authtype: LOGIN
          name: ${SMTP_USERNAME}
          password: ${SMTP_PASSWORD}
      phpConfigs:
        uploadLimit.ini: |
          upload_max_filesize = 5G
          post_max_size = 5G
          max_input_time = 3600
          max_execution_time = 3600
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array
            (
            '${CLUSTER_POD_CIDR}',
            '${CLUSTER_SVC_CIDR}',
            '${NODE1_ADDRESS}',
            '${NODE2_ADDRESS}',
            '${NODE3_ADDRESS}',
            '${NODE4_ADDRESS}',
            '${NODE5_ADDRESS}'
            )
          );
    ingress:
      enabled: true
      className: traefik-external
      annotations:
        external-dns/public: "true"
        external-dns.alpha.kubernetes.io/target: ${DYNAMIC_DOMAIN}
        hajimari.io/enable: "true"
        hajimari.io/icon: "cloud-upload"
        hajimari.io/appName: "Nextcloud"
        hajimari.io/group: "Home"
      tls:
        - hosts:
            - cloud.${SECRET_DOMAIN}
          secretName: "crj-wildcard-certificate"
    postgresql:
      enabled: true
      podAnnotations:
        backup.velero.io/backup-volumes: config
      global:
        postgresql:
          postgresqlUsername: ${NEXTCLOUD_DB_USER}
          postgresqlPassword: ${NEXTCLOUD_DB_PASSWORD}
          postgresqlDatabase: ${NEXTCLOUD_DB_NAME}
      persistence:
        enabled: true
        existingClaim: nextcloud-db-rook
      volumePermissions:
        enabled: true
        securityContext:
          runAsUser: 0
      securityContext:
        enabled: true
        fsGroup: 5432
      containerSecurityContext:
        enabled: true
        runAsUser: 5432
      primary:
        nodeSelector:
          kubernetes.io/arch: "amd64"
    externalDatabase:
      enabled: true
      type: postgresql
      host: nextcloud-db.soho.svc.cluster.local
      user: ${NEXTCLOUD_DB_USER}
      password: ${NEXTCLOUD_DB_PASSWORD}
      database: ${NEXTCLOUD_DB_NAME}
    nginx:
      ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
      enabled: true
      image:
        repository: nginx
        tag: 1.21.4
        pullPolicy: IfNotPresent
        config:
          default: true
    internalDatabase:
      enabled: false
    redis:
      enabled: true
    cronjob:
      enabled: false
      schedule: "*/5 * * * *"
      curlInsecure: false
      failedJobsHistoryLimit: 5
      successfulJobsHistoryLimit: 2
    persistence:
      enabled: true
      existingClaim: nextcloud-data-pandora
    metrics:
      enabled: true
      replicaCount: 1
      https: true
      timeout: 5s
      image:
        repository: xperimental/nextcloud-exporter
        tag: v0.4.0
        pullPolicy: IfNotPresent
      service:
        type: ClusterIP
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9205"
    nodeSelector:
      kubernetes.io/arch: "amd64"
