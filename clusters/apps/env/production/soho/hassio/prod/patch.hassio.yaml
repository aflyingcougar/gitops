---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
spec:
  timeout: 15m0s
  values:
    podAnnotations:
      k8s.v1.cni.cncf.io/networks: |
        [{
          "name":"iot-garbage",
          "namespace": "network-system",
          "mac": "77:58:d6:77:68:b8";
        }]
    env:
      TZ: "America/New_York"
    envFrom:
      - secretRef:
          name: home-assistant
    service:
      main:
        ports:
          http:
            port: 8123
    ingress:
      main:
        enabled: false
    prometheus:
      serviceMonitor:
        enabled: false
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false
    persistence:
      config:
        enabled: true
        mountPath: /config
        existingClaim: home-assistant-config-iscsi
        accessMode: ReadWriteMany
        skipuninstall: false
      backups:
        enabled: true
        mountPath: /backups
        existingClaim: home-assistant-backups-apollo
        accessMode: ReadWriteOnce
        skipuninstall: false
    addons:
      codeserver:
        enabled: true
        resources:
          requests:
            cpu: 30m
            memory: 100Mi
          limits:
            memory: 500Mi
        image:
          repository: codercom/code-server
          tag: 4.4.0
        git:
          deployKeySecret: code-server
        workingDir: "/config"
        args:
          - --auth
          - "none"
          - --user-data-dir
          - "/config/.vscode"
          - --extensions-dir
          - "/config/.vscode"
        ingress:
          enabled: false
          ingressClassName: "traefik-internal"
          annotations:
            nginx.org/websocket-services: home-assistant
          hosts:
            - host: "hass-config.${SECRET_DOMAIN}"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - "hass-config.${SECRET_DOMAIN}"
              secretName: "crj-wildcard-certificate"
        volumeMounts:
          - name: config
            mountPath: /config
          - name: backups
            mountPath: /backups
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        memory: 4096Mi
        cpu: 1
    nodeSelector:
      kubernetes.io/arch: amd64
