---
- name: Gather VLAN Interface MAC addresses
  ansible.builtin.shell: |
    echo $(hostname)|md5sum|sed 's/^\(..\)\(..\)\(..\)\(..\)\(..\).*$/02:\1:\2:\3:\4:\5/'
  register: iot_if_mac

- name: Print generated MAC address for custom VLAN
  ansible.builtin.debug:
    msg: Generated MAC address {{ iot_if_mac }}
  when: iot_if_mac is defined

- name: Create VLAN Interface
  ansible.builtin.blockinfile:
    path: /etc/network/interfaces.d/IOT_GARBAGE.vlan
    owner: root
    mode: 0644
    create: true
    block: |
      auto enp1s0.3002
      iface enp1s0.3002 inet dhcp
          hwaddress ether {{ iot_if_mac.stdout }}

- name: install vlan
  ansible.builtin.apt:
    name:
      - vlan
  register: apt_install_vlan
  retries: 5
  until: apt_install_vlan is success

- name: Add the 802.1q module
  community.general.modprobe:
    name: 8021q
    state: present
    persistent: present

- name: Add extra routing capability
  ansible.builtin.lineinfile:
    path: /etc/iproute2/rt_tables
    mode: 0644
    create: false
    owner: root
    regexp: '^500 firsttable$'
    line: 500 firsttable

- name: statically define interface name udev
  ansible.builtin.lineinfile:
    path: /etc/udev/rules.d/70-persistent-net.rules
    mode: 0644
    create: true
    owner: root
    regexp: '^SUBSYSTEM.*enp1s0"$'
    line: |
      SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="{{ ansible_default_ipv4.macaddress }}", ATTR{type}=="1", KERNEL=="enp*", NAME="enp1s0"
